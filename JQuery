一、jQuery介绍
jQuery = JavaScript + Query，是辅助JavaScript开发的类库，它的核心思想是写的更少，做的更多，注意：使用jQuery一定要先通过script标签的src属性引入jQuery库.

二、jQuery核心函数
$是jQuery的核心函数，$()就是调用$这个函数

给按钮绑定点击事件
1、查询标签
2、click()函数
代码:
 $(function () {
            var $bt=$("#btn");
            $bt.click(function () {
                alert("123");
            });
        });
        
(1) 传入的参数为函数时，在HTML文档加载完成之后自动的执行这个函数
<head>
    <meta charset="UTF-8">
    <title>Title</title>
    <script type="text/javascript" src="../script/jquery-1.7.2.js"></script>
    <!--必须重新定义一个script标签-->
    <script type="text/javascript">
        $(function () {
            alert("页面加载完成之后，自动调用");
        })
    </script>
</head>
(2) 传入的参数为HTML语言时，创建标签对象(jQuery对象)

<head>
    <meta charset="UTF-8">
    <title>Title</title>
    <script type="text/javascript" src="../script/jquery-1.7.2.js"></script>
    <script type="text/javascript">
        $(function () {
            //动态创建一个div标签对象，并将其添加到body对象中
            $("<div>" +  //光标在第二个双引号之前时按回车会自动的加上+号
                "<span>span1</span>" +
                "<span>span2</span>" +
                "</div>").appendTo("body");
        })
    </script>
</head>

(3) 传入的参数为选择器字符串时：
① $(“#属性值”)；id选择器，根据id查询标签对象(jQuery对象)
② $(“标签名”)；标签名选择器，根据指定的标签名查询标签对象(jQuery对象)
③ $(“.属性值”)；类选择器，根据class属性值查询标签对象(jQuery对象)

<head>
    <meta charset="UTF-8">
    <title>Title</title>
    <script type="text/javascript" src="../script/jquery-1.7.2.js"></script>
    <script type="text/javascript">
        $(function () {
            alert($("#id001")); //[object Object]
            alert($(".class002")); //[object Object]
            alert($("button").length); //3
        })
    </script>
</head>
<body>
    <button id="001">button1</button>
    <button class="002">button2</button>
    <button>按钮名</button>
</body>

(4) 传入的参数为DOM对象时，会把这个DOM对象转换为jQuery对象

<head>
    <meta charset="UTF-8">
    <title>Title</title>
    <script type="text/javascript" src="../script/jquery-1.7.2.js"></script>
    <script type="text/javascript">
        $(function () {
            var btnObj = document.getElementById("001");
            alert(btnObj); //[object HTMLButtonElement]
            alert($(btnObj)); //[object Object]
        })
    </script>
</head>
<body>
    <button id="001">button1</button>
</body>



 $(function () {
            var $bt=$("#btn");
            $bt.click(function () {
                alert("123");
            });
        });
三、jQuery对象和DOM对象的联系与区别

1.DOM对象
(1) 通过getElement(s)Byxxx或createElement()得到的标签对象是DOM对象
(2) DOM对象Alert出的效果是：[object HTML标签名 Element]

2.jQuery对象
(1) 通过$函数创建的对象是jQuery对象，如:alert( $("<h1></h1>") ); //[object Object]
(2) 通过jQuery包装的DOM对象是jQuery对象，如二(4)
(3) 通过$函数查询到的对象也是jQuery对象，如二(3)
(4) jQuery对象Alert出的效果是：[object Object]

3.jQuery对象的本质
jQuery对象是DOM对象的数组 + jQuery提供的一系列功能函数

4.jQuery对象不能使用DOM对象的属性和方法，DOM对象不能使用jQuery对象的属性和方法

5.DOM对象和jQuery对象的互相转换

(1) DOM对象转换为jQuery对象：var $obj=$(dom对象)
① 先有DOM对象
② $(DOM对象)就可转换为jQuery对象

(2) jQuery对象转换为DOM对象：var dom=$obj[下标]
① 先有jQuery对象
② jQuery对象[下标]即可取出对应的DOM对象

6. jQuery对象的常用方法：

(1) jQuery对象.click( function(){} )；添加点击响应函数
(2) jQuery对象.css(“background-color”,“xxx”)；可设置背景颜色
(3) jQuery对象.val()；可以获取、赋值表单项的value属性
(4) jQuery对象.each(function(){})；遍历DOM对象数组的方法，function中写每次遍历到的对象要执行的方法，function中使用this代表当前遍历到的DOM对象

四、jQuery选择器

1. 基本选择器
#id ：根据id查找标签对象
element ：根据标签名查找标签对象
.class ：根据class查找标签对象
*：查找所有元素的标签对象
selector1，selector2…selectorN ：合并选择器1，选择器2…选择器N的标签对象并返回

2. 层级选择器
ancestor descendant ：在给定的祖先元素下匹配所有的后代元素
parent > child ：在给定的父元素下匹配所有的子元素
prev + next ：在同级的情况下匹配所有紧接在prev元素后的next元素
prev ~ siblings ：在同级的情况下匹配prev元素之后的所有siblings元素

3. 基本过滤选择器
注意：标签名前置，即冒号之前为标签名
:first ：获取匹配的第一个元素
:last ：获取匹配的最后一个元素
:not(selector) ：去除所有与给定选择器匹配的元素
:even ：匹配所有索引值为偶数的元素，从0开始计数
:odd ：匹配所有索引值为奇数的元素，从0开始计数
:eq(index) ：匹配一个给定索引值的元素(索引从0开始计数)
:gt(index) ：匹配所有大于给定索引值的元素(索引从0开始计数)
:lt(index) ：匹配所有小于给定索引值的元素(索引从0开始计数)
:header ：匹配如h1、h2、h3之类的标题元素
:animated ：匹配所有正在执行动画效果的元素

4. 内容过滤选择器
注意：标签名前置，即冒号之前为标签名
:contains(text) ：匹配包含给定文本的元素
:has(selector) ：匹配含有选择器所匹配的的元素的元素
:empty ：匹配所有不包含子元素或文本的空元素
:parent ：匹配含有子元素或文本的元素

5. 属性过滤选择器
注意：标签名前置，即中括号之前为标签名
[attribute] ：匹配包含给定属性的元素
[attribute = value] ：匹配给定的属性是某个特定值的元素
[attribute != value] ：匹配所有不含有指定的属性或属性不等于特定值的元素
[attribute^ = value] ：匹配给定的属性是以某些值开始的元素
[attribute$ = value] ：匹配给定的属性是以某些值结尾的元素
[attribute* = value] ：匹配给定的属性是以包含某些值的元素
[selector1][selector2]…[selectorN] ：复合属性选择器，需要满足多个条件时使用

6. 表单过滤选择器
val()可以操作表单项的value属性值：单选、复选、文本框等。

:input ：匹配所有input标签元素，不论type为哪种类型
:text \ :password \ :radio \ :checkbox \ :submit \ :image \ :reset \ :button \ :file \ :hidden ：
匹配所有input标签中type为指定类型的元素
:enabled ：匹配所有可用元素(disabled属性设置为disabled为不可用：无法填入内容或选中)
:disabled ：匹配所有不可用元素
:checked ：匹配所有被选中的元素(复选框、单选框等，不包括select中的option)
:selected ：匹配所有选中的option元素

遍历:
//4.获取多选框，每个选中的value值
			
				$("#btn4").click(function(){
					// 获取全部选中的复选框标签对象
					var $checkboies = $(":checkbox:checked");
					// 老式遍历
					// for (var i = 0; i < $checkboies.length; i++){
					// 	alert( $checkboies[i].value );
					// }

					// each方法是jQuery对象提供用来遍历元素的方法
					// 在遍历的function函数中，有一个this对象，这个this对象，就是当前遍历到的dom对象
					$checkboies.each(function () {
						alert( this.value );
					});

				});

//5.获取下拉框选中的内容  
				$("#btn5").click(function(){
					// 获取选中的option标签对象
					var $options = $("select option:selected");
					// 遍历，获取option标签中的文本内容
					$options.each(function () {
						// 在each遍历的function函数中，有一个this对象。这个this对象是当前正在遍历到的dom对象
						alert(this.innerHTML);
					});
				});
        
        
        
五、jQuery元素的筛选

last()：获取最后一个元素(功能跟:last一样)
first()：获取第一个元素(功能跟:first一样)
eq()：获取给定索引的元素(功能跟:eq()一样)
filter(exp)：留下匹配的元素
is(exp)：判断是否匹配给定的选择器，只要有一个匹配就返回true
has(exp)：返回包含有匹配选择器的元素的元素(功能跟:has一样)
not(exp)：删除匹配选择器的元素(功能跟:not一样)
children(exp)：返回匹配给定选择器的子元素(功能跟parent>child一样)
find(exp)：返回匹配给定选择器的后代元素(功能跟-ancestor descendant样)


六、jQuery的属性操作

1.html()方法：可以设置和获取起始标签和结束标签中的内容(包括两边的标签)
2. text()方法：可以设置和获取起始标签和结束标签中的文本(不包括两边的标签)
3. val()方法：可以设置和获取表单项的value属性值
4. attr()方法：可以设置和获取属性的值，不推荐操作checked、selected、disabled、readOnly，还可 以操作自定义属性。
  $(function () {
            //attr获取的使用：括号中的双引号中放属性名
            alert($(":checkbox:first").attr("name")); //checkbox
            //attr赋值的使用：第一个双引号中放属性名，第二个双引号中放指定的值
            $(":checkbox:first").attr("name","abc"); //name属性值修改为abc
            $(":checkbox").prop("checked",false); //两个都未被选中
            //对自定义属性进行操作
            $(":checkbox:first").attr("abc","abcValue");
            //按F12可出现，临时存放一些数据
        })
        
5. prop()方法：可以设置和获取属性的值，只推荐操作checked、selected、disabled、readOnly


七、DOM的增删改

1. 内部插入
appendTo()：a.appendTo(b) 把a插入到所有b子元素的末尾，成为最后一个子元素
prependTo()：a.prependTo(b) 把a插入到所有b子元素的前面，成为第一个子元素

2. 外部插入
insertAfter()：a.insertAfter(b) 同级的情况下得到ba
insertBefore()：a.insertBefore(b) 同级的情况下得到ab

3. 替换
replaceWith()：a.replaceWith(b) 用一个b替换掉所有a
replaceAll()：a.replaceAll(b) 用a替换掉所有b(有几个b就替换几次)

4. 删除
remove()：a.remove() 删除a标签及其所有内容(包括文字或子标签等)
empty()：a.empty() 清空a标签的内容(包括文字或子标签等)，标签留下



八、CSS样式操作

addClass()：添加样式
removeClass()：删除样式
toggleClass()：有则删除，无则添加样式
offset()：获取和设置元素的坐标，设置时必须有两个属性top和left
设置时的格式：jQuery对象.offset({top:值，left:值})；

九、jQuery动画

以下动画方法都可以添加参数：

第一个参数是动画执行的时长，以毫秒为单位
第二个参数是回调函数：function(){}，即动画完成之后自动执行的函数
show()：将隐藏的元素显示
hide()：将显示的元素隐藏
toggle()：显示则隐藏，隐藏则显示
fadeIn：淡入
fadeOut()：淡出
fadeToggle()：淡入/淡出切换
fadeTo()：在指定时长内将透明度修改到指定的值，0代表透明，1代表可见，0.5代表半透明
第一个参数指定时长(ms)，第个参数设置透明度，第三个参数设置回调函数

十、jQuery事件操作

$(function(){});和window.onload = function(){};的区别：

①触发时间：

jQuery是浏览器的内核解析完页面的标签(如body中的标签)，创建好DOM对象之后就会 立马执行，此时页面上没有任何内容
JS是浏览器的内核解析完标签创建好DOM对象之后等标签显示时的内容(如图片，网页 等)加载完成之后执行，此时页面上已经有body中的内容

②触发顺序：jQuery先、JS后

③各有多个时执行的次数：

jQuery所有function函数都会按照顺序执行
JS只会执行最后一个function函数


十一、jQuery中其他的事件处理方法

click()：可以绑定单击事件(参数中传function(){})，可以触发单击事件(参数中无function)
mouseover()：鼠标移入事件
mouseout()：鼠标移出事件
bind()：可以给元素一次性绑定一个或多个事件，第一个参数加双引号，其中放空格隔开的多个
事件，第二个参数是function(){}，即事件响应后的代码
one()：用法与bind一致，但是one方法绑定的事件只会响应一次
unbind()：与bind方法相反的操作，解除事件的绑定
live()：用来绑定事件，即使这个元素先前并未绑定，而是后面动态创建出来的也自动绑定

十二、事件的冒泡

事件的冒泡是指父子元素绑定同一个事件时，当触发子元素的事件时，父元素的同一个事件也
随之自动的响应.
阻止事件的冒泡发生：在子元素的事件函数体内return false;

十三、事件对象

事件对象：包含触发的事件的所有信息的一个对象
获取事件对象的方式：在给元素绑定事件时函数格式为function(event){}，参数中的名字可任意，一般取名为event，这个event就是事件对象
