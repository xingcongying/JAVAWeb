一、Servlet介绍

Servlet是JavaEE规范(接口)之一
Servlet是JavaWeb三大组件之一，三大组件分别是Servlet程序、Filter过滤器、Listener监听器
Servlet是运行在服务器上的一个Java程序，可以接收客户端发来的请求，并响应数据给客户端


二、手动实现Servlet程序

编写一个类实现Servlet接口，并重写service方法处理请求、响应数据
在WEB-INF文件夹中的web.xml文件中配置Servlet程序的访问地址
public class TestServlet implements Servlet {
    @Override
    public void service(ServletRequest servletRequest, ServletResponse servletResponse) throws ServletException, IOException {
        System.out.println("TestServlet被访问了!");
    }
}

代码演示：2. 在web.xml中的配置
<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">
    <!--内容写在<web-app></web-app>中-->
    <!--servlet标签给Tomcat配置Servlet程序-->
    <servlet>
        <!--servlet-name标签给Servlet程序起一个别名(一般是类名)-->
        <servlet-name>TestServlet</servlet-name>
        <!--servlet-class标签是Servlet程序的全类名-->
        <servlet-class>com.qizegao.servlet.TestServlet</servlet-class>
    </servlet>
    <!--servlet-mapping标签是servlet的映射，给Servlet程序配置访问地址-->
    <servlet-mapping>
        <!--此时servlet-name标签要与上一个servlet-name标签中相同-->
        <servlet-name>TestServlet</servlet-name>
        <!--url-pattern标签配置访问地址:
            /在服务器解析时表示为Tomcat的工程路径(在Edit Configurations中修改)，
            /Test代表默认路径/Test，即http://localhost:8080/MyTest/Test，
            也就是说在浏览器的地址栏中输入上述路径访问到的是TestServlet类-->
        <url-pattern>/Test</url-pattern> //任意起名，用这个名字来访问指定类
    </servlet-mapping>
</web-app>
运行结果：
点击绿色按钮开启Tomcat服务器之后，会自动打开默认的地址http://localhost:8080/MyTest，
在地址栏继续输入/Test，会执行指定类的service方法，控制台输出：TestServlet被访问了!


三、Servlet的生命周期
Servlet程序被访问以后按以下顺序执行：

执行Servlet程序的构造方法
执行init方法
执行service方法
执行destroy方法
其中1和2是在初次访问并创建Servlet程序时会执行(每次启动服务只执行一次)，第3步每次刷新 (访问)都会执行，第4步点击停止时会执行一次

四、ServletConfig接口
从名字来看，得知此接口中是Servlet程序的配置信息：
(1) Servlet程序和ServletConfig对象都是由Tomcat负责创建，编程人员负责使用
(2) Servlet程序默认是第一次访问时创建，每个Servlet程序创建时对应的创建ServletConfig对 象，二者相互对应，某个Servlet程序只可以获得他对应的ServletConfig对象，无法获得别的 Servlet程序的ServletConfig对象

ServletConfig接口的三大作用：
(1) 可以获取Servlet程序的别名(即web.xml的的内容)
(2) 可以获取web.xml的初始化参数的值
(3) 可以获取ServletContext对象

注意：重写init方法时，必须要在函数体内写：super.init(config);
原因：父类GenericServlet中的init方法将参数config保存起来，子类若不调用则无法保存


五、ServletContext接口

1、ServletContext接口表示Servlet上下文对象
2、一个web工程只有一个ServletContext对象实例
3、ServletContext是在web工程启动时创建，在web工程停止时销毁
4、ServletContext对象是一个域对象
域对象：像Map一样存取数据的对象称为域对象，域指的是存取数据的操作范围，
ServletContext的域是整个web工程
    
            存数据              取数据                  删除数据
Map         put()               get()                  remove()
域对象     setAttribute()     getAttribute()          removeAttribute() 

5、ServletContext接口的四个作用：
(1) 获取web.xml中配置的上下文参数标签中的值
(2) 获取当前工程的路径，格式：/工程路径，也就是Edit Configurations中Deployment中的 Application context的内容(即地址中8080之后，具体的打开的页面之前的内容)
(3) 获取工程部署后在硬盘上的绝对路径
(4) 像Map一样存取数据
注意：一个web工程只会创建一个ServletContext对象实例，换其他类输出servletContext得到的结果与上述相同，且一旦给此对象赋值，即使换另一个类getAttribute(key1)，得到的结果也是value1

六、HTTP协议

1. 含义
所谓协议指的是双方或多方相互约定好，都要遵守的规则，而HTTP协议指的是客户端和 服务器之间通信时发送的数据需要遵守的规则，HTTP协议中的数据又称为报文

2. 请求的HTTP协议格式
请求分为GET请求和POST请求两种：

(1) GET请求：由请求行、请求头两部分组成，如下图所示：
内容分析：
请求行：
①请求的方式：GET
②请求的资源路径：/06_servlet/a.html
③请求的协议的版本号：HTTP/1.1

请求头：
①Accept：告诉服务器，客户端可以接收的数据类型
②Accept-Language：告诉服务器，客户端可以接收的语言类型：
zh_CN：中文中国
en_US：英文美国
③User-Agent：代表客户端浏览器的信息
④Accept-Encoding：告诉服务器，客户端可以接收的数据编码(压缩)格式
⑤Host：表示请求时的服务器ip和端口号
⑥Connection：告诉服务器，当前连接如何处理：
Keep-Alive：回传完数据不要马上关闭，保持一小段时间的连接
Closed：回传完数据马上关闭
            
(2) POST请求：由请求行、请求头、空行、请求体组成

内容分析(仅分析与GET请求的不同之处)：
请求头：
①Referer：表示请求发起时，浏览器地址栏中的地址
②Content-Type：表示发送的数据的类型：
i. application/x-www-form-ur lencoded：表示提交的数据的格式是 name=value&name=value，然后对其进行url编码，url编码是把非英文内容转换为：%xx%xx
ii. multipart/form-data：表示以多段的形式提交数据给服务器，即以流的形式提交，用于上传
③Content-Length：表示发送的数据的长度
④Cache-Control：表示如何控制缓存，no-cache不缓存

(3). 常用请求头的说明
Accept: 表示客户端可以接收的数据类型
Accpet-Languege: 表示客户端可以接收的语言类型
User-Agent: 表示客户端浏览器的信息
Host： 表示请求时的服务器 ip 和端口号

(4). 哪些是 GET 请求，哪些是 POST 请求
GET 请求有哪些：
1、form 标签 method=get
2、a 标签
3、link 标签引入 css
4、Script 标签引入 js 文件
5、img 标签引入图片
6、iframe 引入 html 页面
7、在浏览器地址栏中输入地址后敲回车

POST 请求有哪些：
8、form 标签 method=post
c)响应的 HTTP 协议格

(5). 常见的响应码
200 表示请求成功
302 表示请求重定向
404 表示服务器收到请求，但是请求的数据不存在（请求地址错误）
500 表示服务器收到请求，但是服务器内部错误（代码错误）

